{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_ALPHABETICALLY","SORT_BY_LENGTH","getSortedGoods","goods","sortField","reversed","sortedGoods","sort","a","b","localeCompare","length","reverse","App","useState","setReversed","setSortField","visibleGoods","setVisibleGoods","handleSort","field","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,sBACtBC,EAAiB,iBAEvB,SAASC,EAAeC,EAAOC,EAAWC,GACxC,IAAIC,EAAW,YAAOH,GAEtB,GAAIC,EACF,OAAQA,GACN,KAAKJ,EACHM,EAAcA,EAAYC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MACzD,MAEF,KAAKR,EACHK,EAAcA,EAAYC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UACtD,MAEF,QACE,OAAO,EAIb,OAAIN,EACKC,EAAYM,UAGdN,EAGF,IAAMO,EAAM,WACjB,MAAgCC,oBAAS,GAAzC,mBAAOT,EAAP,KAAiBU,EAAjB,KACA,EAAkCD,mBAAS,IAA3C,mBAAOV,EAAP,KAAkBY,EAAlB,KAEA,EAAwCF,mBACtCZ,EACEH,EAAiBK,EAAWC,IAFhC,mBAAOY,EAAP,KAAqBC,EAArB,KAWA,SAASC,EAAWC,GAClBJ,EAAaI,GACbF,EAAgBhB,EAAeH,EAAiBqB,EAAOf,IASzD,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMH,EAAWnB,IAC1BuB,KAAK,SACLF,UAAWG,IAAG,SAAU,UAAW,CACjC,WAAYpB,IAAcJ,IAJ9B,iCAUA,wBACEsB,QAAS,kBAAMH,EAAWlB,IAC1BsB,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CACpC,WAAYpB,IAAcH,IAJ9B,4BAUA,wBACEqB,QAAS,kBAvCfP,GAAaV,QACba,EAAgBhB,EAAeH,EAAiBK,GAAYC,KAuCtDkB,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CACpC,YAAanB,IAJjB,sBAUED,GAAaC,IACb,wBACEiB,QAzCV,WACEN,EAAa,IACbD,GAAY,GACZG,EAAgBnB,IAuCRwB,KAAK,SACLF,UAAU,4BAHZ,sBAUHJ,EAAaQ,KAAI,SAAAC,GAAI,OACpB,6BACE,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCnHnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e5fef93d.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_ALPHABETICALLY = 'Sort alphabetically';\nconst SORT_BY_LENGTH = 'Sort by length';\n\nfunction getSortedGoods(goods, sortField, reversed) {\n  let sortedGoods = [...goods];\n\n  if (sortField) {\n    switch (sortField) {\n      case SORT_ALPHABETICALLY:\n        sortedGoods = sortedGoods.sort((a, b) => a.localeCompare(b));\n        break;\n\n      case SORT_BY_LENGTH:\n        sortedGoods = sortedGoods.sort((a, b) => a.length - b.length);\n        break;\n\n      default:\n        return 0;\n    }\n  }\n\n  if (reversed) {\n    return sortedGoods.reverse();\n  }\n\n  return sortedGoods;\n}\n\nexport const App = () => {\n  const [reversed, setReversed] = useState(false);\n  const [sortField, setSortField] = useState('');\n\n  const [visibleGoods, setVisibleGoods] = useState(\n    getSortedGoods(\n      goodsFromServer, sortField, reversed,\n    ),\n  );\n\n  function handleReverse() {\n    setReversed(!reversed);\n    setVisibleGoods(getSortedGoods(goodsFromServer, sortField, !reversed));\n  }\n\n  function handleSort(field) {\n    setSortField(field);\n    setVisibleGoods(getSortedGoods(goodsFromServer, field, reversed));\n  }\n\n  function handleReset() {\n    setSortField('');\n    setReversed(false);\n    setVisibleGoods(goodsFromServer);\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => handleSort(SORT_ALPHABETICALLY)}\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortField !== SORT_ALPHABETICALLY,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => handleSort(SORT_BY_LENGTH)}\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortField !== SORT_BY_LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => handleReverse()}\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !reversed,\n          })}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reversed) && (\n          <button\n            onClick={handleReset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      {visibleGoods.map(good => (\n        <ul>\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        </ul>\n      ))}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}